version: "3"

services:
  api-gateway:
    image: "sehcmusgroup1/api-gateway:${GATEWAY_VERSION}"
    container_name: api-gateway
    restart: unless-stopped
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ./configs/env/.env.gateway
    volumes:
      # mounting logs folder to local computer file system
      - ./logs/api-gateway:/app/logs
    ports:
      - 9000:9000

  presentation-service01:
    image: "sehcmusgroup1/presentation-service:${PRESENTATION_VERSION}"
    container_name: presentation-service01
    restart: unless-stopped
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ./configs/env/.env.presentation
    volumes:
      # mounting logs folder to local computer file system
      - ./logs/presentation-service01:/app/logs

  presentation-service02:
    image: "sehcmusgroup1/presentation-service:${PRESENTATION_VERSION}"
    container_name: presentation-service02
    restart: unless-stopped
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ./configs/env/.env.presentation
    volumes:
      # mounting logs folder to local computer file system
      - ./logs/presentation-service02:/app/logs

  socket-service:
    image: "sehcmusgroup1/socket-service:${SOCKET_VERSION}"
    container_name: socket-service
    restart: unless-stopped
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ./configs/env/.env.socket
    volumes:
      # mounting logs folder to local computer file system
      - ./logs/socket-service:/app/logs
    ports:
      - 5001:5001

  # presenti:
  #   image: sehcmusgroup1/presenti
  #   container_name: presenti
  #   restart: unless-stopped
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #   env_file:
  #     - ./configs/env/.env.presenti
  #   ports:
  #     - 3004:3004

  # presento:
  #   image: sehcmusgroup1/presento
  #   container_name: presento
  #   restart: unless-stopped
  #   environment:
  #     - TZ=Asia/Ho_Chi_Minh
  #   env_file:
  #     - ./configs/env/.env.presento
  #   volumes:
  #     - ./logs/presento:/usr/src/presento/src/logs
  #   ports:
  #     - 3001:3001

  casdoor:
    image: "casbin/casdoor:${CASDOOR_VERSION}"
    container_name: casdoor
    restart: unless-stopped
    entrypoint: /bin/sh -c './server --createDatabase=true'
    depends_on:
      - mysql
      - redis
    environment:
      RUNNING_IN_DOCKER: "true"
    volumes:
      - ./casdoor/conf:/conf/
    ports:
      - 8000:8000

  rabbitmq:
    image: rabbitmq:3.10-alpine
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    ports:
      - 5672:5672
      - 15671:15671
      - 15672:15672
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/

  postgres:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5431:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data

  mysql:
    restart: unless-stopped
    image: mysql:8.0.25
    container_name: mysql
    platform: linux/amd64
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - ./mysql:/var/lib/mysql

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379

  socket-redis:
    image: redis:alpine
    container_name: socket-redis
    restart: unless-stopped
    ports:
      - 6378:6379

  presento-redis:
    image: redis:alpine
    container_name: presento-redis
    restart: unless-stopped
    ports:
      - 6377:6379

  nginx-load-balancer:
    image: nginx
    container_name: nginx-load-balancer
    restart: unless-stopped
    ports:
      - 9001:9001
    volumes:
      - ./logs/nginx-load-balancer:/var/log/nginx
      - ./nginx-load-balancer/etc/nginx/conf.d:/etc/nginx/conf.d
      - ./nginx-load-balancer/etc/nginx/nginx.conf:/etc/nginx/nginx.conf