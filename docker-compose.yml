version: '3'

networks:
  local_network:
    external: true

services:
  api-gateway:
    image: 'group1sechcmus/api-gateway:${GATEWAY_VERSION}'
    container_name: api-gateway
    build:
      context: ../api-gateway
      dockerfile: ../api-gateway/Dockerfile
    restart: unless-stopped
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ../api-gateway/.env.production
    volumes:
      # mounting logs folder to local computer file system
      - ./api-gateway/logs:/app/logs
    ports:
      - 9000:9000
    networks:
      - local_network

  presentation-service:
    image: 'group1sechcmus/presentation-service:${PRESENTATION_VERSION}'
    container_name: presentation-service
    build:
      context: ../presentation-service
      dockerfile: ../presentation-service/Dockerfile
    restart: unless-stopped
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ../presentation-service/.env.production
    volumes:
      # mounting logs folder to local computer file system
      - ./presentation-service/logs:/app/logs
    networks:
      - local_network

  socket-service:
    image: group1sechcmus/socket-service
    container_name: socket-service
    build:
      context: ../socket-service
      dockerfile: ../socket-service/Dockerfile
    restart: unless-stopped
    ports:
      - 3002:3000
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ../socket-service/.env.production
    networks:
      - local_network

  presenti:
    image: group1sechcmus/presenti
    container_name: presenti
    build:
      context: ../presenti
      dockerfile: ../presenti/Dockerfile
    restart: unless-stopped
    ports:
      - 3004:3000
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ../presenti/.env.production
    networks:
      - local_network

  presento:
    image: group1sechcmus/presento
    container_name: presento
    build:
      context: ../presento
      dockerfile: ../presento/Dockerfile
    restart: unless-stopped
    ports:
      - 3005:3001
    environment:
      - TZ=Asia/Ho_Chi_Minh
    env_file:
      - ../presento/backend/.env.production
    volumes:
      - ./presento/logs:/usr/src/presento/src/logs
    networks:
      - local_network

  casdoor:
    image: casbin/casdoor:v1.266.0
    container_name: casdoor
    restart: unless-stopped
    entrypoint: /bin/sh -c './server --createDatabase=true'
    ports:
      - 8000:8000
    depends_on:
      - mysql
    environment:
      RUNNING_IN_DOCKER: 'true'
    volumes:
      - ./casdoor/conf:/conf/
    networks:
      - local_network

  rabbitmq:
    image: rabbitmq:3.10-alpine
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    ports:
      - 5672:5672
      - 15671:15671
      - 15672:15672
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia/
    networks:
      - local_network

  postgres:
    image: postgres:14
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      - local_network

  mysql:
    restart: unless-stopped
    image: mysql:8.0.25
    container_name: mysql
    platform: linux/amd64
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - local_network

  mongo:
    image: mongo:4.4.19-rc2
    container_name: mongo
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    volumes:
      - ./mongo/data:/data/db
    networks:
      - local_network

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - local_network

  socket-redis:
    image: redis:alpine
    container_name: socket-redis
    restart: unless-stopped
    ports:
      - 6378:6379
    networks:
      - local_network

  ngrok:
    image: ngrok/ngrok:alpine
    container_name: ngrok
    environment:
      - NGROK_AUTHTOKEN=2MjmQ4H9yxaKEuwfFYGmHQDPfZV_5fuS8ZSzcSF1n5B7iKAWK
    command: http host.docker.internal:3000 # for running on docker
    # command: http 3000 # for running on local (from source)
    ports:
      - 4040:4040
    networks:
      - local_network
